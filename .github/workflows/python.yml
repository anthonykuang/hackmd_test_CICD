name: Python CI

on:
  push:
    # branches: 後面要加一個空格，不然會報錯
    branches: ['master']
  pull_request:
    branches: ['master']
jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        # python-version: [3.8, 3.9, 3.10, 3.11]
        python-version: [3.11]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ./python_project1
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt;fi
      - name: Run tests
        run: |
          pytest
      - name: 生成報告 HTML
        working-directory: ./python_project1
        run: python src/generator.py
      # ✨ 新增：上傳構建產物 (HTML 檔案) 以便部署作業使用 ✨

      - name: 檢查輸出檔案
        run: ls -R ./python_project1/output

      - name: 上傳部署產物 (給 Pages)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./python_project1/output
  # CD 階段：部署到 GitHub Pages
  deploy:
    needs: build_and_test # ✨ 確保在 CI 成功後才執行部署 ✨
    if: github.ref == 'refs/heads/master' # ✨ 僅在推送到 master 分支時才部署 ✨
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # 部署後的 URL
    permissions: # ✨ 在這裡新增這個區塊 ✨
      id-token: write # 為 GITHUB_TOKEN 授予 id-token 寫入權限
      pages: write    # 通常也需要 pages 寫入權限來部署

    steps:
      - name: 設定 GitHub Pages
        uses: actions/configure-pages@v4

      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 檢查部署 URL
        run: echo "部署已完成，請訪問：${{ steps.deployment.outputs.page_url }}"
    
